generator client {
  provider = "prisma-client-js"
  output   = "../generated/db2"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL_DB2")
}

model Product {
  product_id         Int                @id @default(autoincrement())
  product_name       String
  product_price      Decimal
  product_qty        Int
  product_status     Int
  created_at         DateTime?          @db.Date
  created_by         String?            @db.NVarChar(100)
  modified_at        DateTime?          @db.Date
  modified_by        String?            @db.NVarChar(10)
  orderDetails       OrderDetail[]
  productPictures    ProductPicture[]
  productCategories  ProductCategory[]  @relation("ProductToProductCategory")

  @@map("products")
}

model Category {
  category_id        Int                @id @default(autoincrement())
  category_name      String             @db.NVarChar(100)
  productCategories  ProductCategory[]  @relation("CategoryToProductCategory")

  @@map("categories")
}

model ProductCategory {
  product_id         Int
  category_id        Int
  product            Product            @relation("ProductToProductCategory", fields: [product_id], references: [product_id], onDelete: Cascade, map: "product_category_product_fk")
  category           Category           @relation("CategoryToProductCategory", fields: [category_id], references: [category_id], onDelete: Cascade, map: "product_category_category_fk")

  @@id([product_id, category_id])
  @@map("product_category")
}

model ProductPicture {
  prodpict_id  Int     @id @default(autoincrement())
  product_id   Int
  prodpict_url String  @db.VarChar(Max)
  product      Product @relation(fields: [product_id], references: [product_id])

  @@map("product_picture")
}

model Order {
  order_id     Int           @id @default(autoincrement())
  customer_id  Int
  order_date   DateTime      @default(now())
  total_price  Decimal
  created_at   DateTime?     @db.Date
  created_by   String?       @db.NVarChar(100)
  modified_at  DateTime?     @db.Date
  modified_by  String?       @db.NVarChar(10)
  orderDetails OrderDetail[]
  customer     Customer      @relation(fields: [customer_id], references: [customer_id])

  @@map("orders")
}

model OrderDetail {
  order_detail_id Int     @id @default(autoincrement())
  order_id        Int
  product_id      Int
  quantity        Int
  price_per_unit  Decimal
  order           Order   @relation(fields: [order_id], references: [order_id])
  product         Product @relation(fields: [product_id], references: [product_id])

  @@map("order_details")
}

model Customer {
  customer_id     Int       @id @default(autoincrement())
  customer_name   String
  customer_email  String
  customer_phone  String?
  customer_status Int
  created_at      DateTime? @db.DateTime
  created_by      String?   @db.NVarChar(100)
  modified_at     DateTime? @db.DateTime
  modified_by     String?   @db.NVarChar(10)
  orders          Order[]

  @@map("customers")
}

